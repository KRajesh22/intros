Linux Prompts:
    $ -> Normal User
    # -> Root User (Administrator)

Linux Command Standard Syntax:
Command-name {options} {inputs} 

Dot (.) denotes present working directory 
DotDot(..) denotes parent directory 

Options:
    - <Single-Character>
    -- <Single-Word>

    Ex: uname --help 

Files/Directories stating with dot(.) are hidden files and directories in Linux

List out existing files and directories:
$ ls 
$ ls -a 
$ ls -l 
$ ls -lt 
$ ls -ltr


Files:
 -> Create Files 
    $ touch file-name
 -> Remove Files 
    $ rm file-name 
 -> Rename a file 
    $ mv source destination 

    Case 1: If destination doesn't exist it will re-name the file. 

    Case 2: If destination exists it will overwrite the file

 -> Copy a file 
    $ cp source  destination 

Directories:

/ -> Root Directory

Types of files:
    d - Directory   
    - - Regular file 
    l - Link
    b - block devices
    c - character files 
    S - socket files 
    p - Named pipe file 

To check in which directory you are in 
    $ pwd

Change from one directory to another
    $ cd <directory>

    $ cd -> This will take you to home directory 
    $ cd - -> This will take you to previous dir 
    $ cd .. -> Takes you to parent directory 

 -> Create Directory 
    $ mkdir demo 

 -> Remove a directory 
    rm / rmdir (Empty Dir)
    $ rm -r dirname

 -> Copy a directory 
    $ cp -r dir1 dir2

 -> Renaming / Moving a directory
    $ mv source destination

    ** If destination does not exists: Rename the directory
    ** If destination exists:
         -> Destination is a file:
                Invalid operation
         -> Destination is a Directory:
                File/Directory will move inside that directory

Filters:
    -> See the complete content inside a file..
       $ cat passwd
       $ cat -n passwd 
       $ tac passwd 

    -> By line numbers.
        --> Print from starting of the file 
            $ head passwd 
                It print top 10 lines 
            $ head -5 passwd 
                It print top 5 lines 

        --> Print from ending of the file 
            $ tail passwd 
                It prints last 10 lines

            $ tail -3 passwd 
                It prints last 3 lines 

    -> Search a word and print those lines 
        Syntax: grep word file 
        $ grep ec2-user passwd 

    -> Column based filter 
        Syntax: cut -d delimeter -f number file 
        $ cut -d : -f 1 passwd 
        $ cut -d : -f 1,5 passwd
        $ cut -d : -f 1-5 passwd

EDITORS:
    ** vi / vim (so widely used)
    ** gedit
    ** nano  

Pipes:
Utilties:
