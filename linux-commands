Linux Prompts:
    $ -> Normal User
    # -> Root User (Administrator)

Linux Command Standard Syntax:
Command-name {options} {inputs} 

Dot (.) denotes present working directory 
DotDot(..) denotes parent directory 

Options:
    - <Single-Character>
    -- <Single-Word>

    Ex: uname --help 

Files/Directories stating with dot(.) are hidden files and directories in Linux

List out existing files and directories:
$ ls 
$ ls -a 
$ ls -l 
$ ls -lt 
$ ls -ltr


Files:
 -> Create Files 
    $ touch file-name
 -> Remove Files 
    $ rm file-name 
 -> Rename a file 
    $ mv source destination 

    Case 1: If destination doesn't exist it will re-name the file. 

    Case 2: If destination exists it will overwrite the file

 -> Copy a file 
    $ cp source  destination 

Directories:

/ -> Root Directory

Types of files:
    d - Directory   
    - - Regular file 
    l - Link
    b - block devices
    c - character files 
    S - socket files 
    p - Named pipe file 

To check in which directory you are in 
    $ pwd

Change from one directory to another
    $ cd <directory>

    $ cd -> This will take you to home directory 
    $ cd - -> This will take you to previous dir 
    $ cd .. -> Takes you to parent directory 

 -> Create Directory 
    $ mkdir demo 

 -> Remove a directory 
    rm / rmdir (Empty Dir)
    $ rm -r dirname

 -> Copy a directory 
    $ cp -r dir1 dir2

 -> Renaming / Moving a directory
    $ mv source destination

    ** If destination does not exists: Rename the directory
    ** If destination exists:
         -> Destination is a file:
                Invalid operation
         -> Destination is a Directory:
                File/Directory will move inside that directory

Filters:
    -> See the complete content inside a file..
       $ cat passwd
       $ cat -n passwd 
       $ tac passwd 

    -> By line numbers.
        --> Print from starting of the file 
            $ head passwd 
                It print top 10 lines 
            $ head -5 passwd 
                It print top 5 lines 

        --> Print from ending of the file 
            $ tail passwd 
                It prints last 10 lines

            $ tail -3 passwd 
                It prints last 3 lines 

    -> Search a word and print those lines 
        Syntax: grep word file 
        $ grep ec2-user passwd 

    -> Column based filter 
        Syntax: cut -d delimeter -f number file 
        $ cut -d : -f 1 passwd 
        $ cut -d : -f 1,5 passwd
        $ cut -d : -f 1-5 passwd

EDITORS:
    ** vi / vim (so widely used)
    ** gedit
    ** nano  

Finding Files:
    -> Finding the files can be done with "find" command.
        Syntax: find <location> <criteria> 
        Ex: find / -name sample.conf
            find /boot -type d 
            find / -name xyz -type d
            find / -name xyz -type f
            find / -name "*.conf"
            
    -> Finding the files can be done also with "locate" command (Only in Redhat family)
       By default that package (software) is not available by default.
       In order to install it just follow the following commands.
        $ sudo yum install mlocate -y 
        $ sudo updatedb 
        
       Now you can find the files using locate command.
        $ locate "*.conf"
        
Utilties:
       -> Downloading the files can be done with "wget" command.
          By default wget command is not installed in your system.
          
          $ sudo yum install wget -y 
          
          Now you can download the file using wget.
          Syntax: wget <URL>
          
          
       -> Browsing over command line
          $ curl <URL>
          
          Also, You can download the files with curl command.
          $ curl URL -o filename
          
       -> Compression Utilities.
           -> Extract a tar file.
              $ tar -xf file.tar.gz / file.tar
              
            tar does not apply compression it is only a packing tool to create a file from multiple files and directories.
            But the compression is applied with 
                gunzip  -> .gz
                bunzip2 -> .bz2
           
           -> TRY THIS AS TASK 
              Create a tar file with .gz and .bz2 extension
              By default bunzip2 is not installed 
              $ sudo yum install bzip2 -y
             
Pipes: (|)
    Pipes will convert STDOUT to STDIN

Process Management:
   -> Every command you execute will create a PID (Process ID , which is unique)
    To list out all the process we are going to use "ps" command.
    Every process is going to have a parent process ID.
    

Admin topics:
1. User management
2. Package management
3. Service management
4. Network management
5. Disk management (Just intro)
6. File permissions

